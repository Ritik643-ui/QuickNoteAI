// import React, { useState } from 'react';
// import {
//   View,
//   Text,
//   ScrollView,
//   TouchableOpacity,
//   Share,
//   Alert,
//   StyleSheet,
//   Dimensions,
//   ActivityIndicator,
// } from 'react-native';
// import { SafeAreaView } from 'react-native-safe-area-context';
 
// const { width } = Dimensions.get('window');
 
// const SummaryScreen = ({ route, navigation }) => {
//   const { summaryData } = route.params || {};
//   const [isSaving, setIsSaving] = useState(false);
 
//   // Fallback data for demo purposes
//   const data = summaryData || {
//     title: "Sample Meeting Summary",
//     summary: "This is a sample summary that would be generated by the AI. It includes key points, action items, and important decisions made during the meeting or from the notes provided.",
//     tags: ["meeting", "project", "deadline", "team"],
//     sentiment: "neutral"
//   };
 
//   const getSentimentStyle = (sentiment) => {
//     switch (sentiment?.toLowerCase()) {
//       case 'positive':
//         return {
//           backgroundColor: '#E8F5E8',
//           borderColor: '#4CAF50',
//           textColor: '#2E7D32',
//           emoji: 'üòä'
//         };
//       case 'negative':
//         return {
//           backgroundColor: '#FFEBEE',
//           borderColor: '#F44336',
//           textColor: '#C62828',
//           emoji: 'üòî'
//         };
//       default:
//         return {
//           backgroundColor: '#E3F2FD',
//           borderColor: '#2196F3',
//           textColor: '#1565C0',
//           emoji: 'üòê'
//         };
//     }
//   };
 
//   const sentimentStyle = getSentimentStyle(data.sentiment);
 
//   const handleSave = async () => {
//     setIsSaving(true);
    

    
//     try {
//       const response = await fetch('http://10.0.0.139:8080/api/notes', {
//         method: 'POST',
//         headers: {
//           'Content-Type': 'application/json',
//         },
//         body: JSON.stringify({
//           title: data.title,
//           summary: data.summary,
//           tags: data.tags,
//           sentiment: data.sentiment,
//           createdAt: new Date().toISOString(),
//         }),
//       });
 
//       if (!response.ok) {
//         throw new Error('Failed to save note');
//       }
 
//       Alert.alert(
//         'Success! üéâ',
//         'Your note has been saved successfully!',
//         [
//           {
//             text: 'View Saved Notes',
//             onPress: () => navigation.navigate('SavedNotes'),
//           },
//           {
//             text: 'OK',
//             style: 'default',
//           },
//         ]
//       );
//     } catch (error) {
//       console.error('Error saving note:', error);
//       Alert.alert('Error', 'Failed to save note. Please try again.');
//     } finally {
//       setIsSaving(false);
//     } 
//   };
 
//   const handleShare = async () => {
//     try {
//       const shareContent = `${data.title}\n\n${data.summary}\n\nTags: ${data.tags?.join(', ')}\nMood: ${data.sentiment}`;
      
//       await Share.share({
//         message: shareContent,
//         title: data.title,
//       });
//     } catch (error) {
//       Alert.alert('Error', 'Failed to share summary');
//     }
//   };
 
//   const handleNewNote = () => {
//     navigation.navigate('NoteInput');
//   };
 
//   return (
//     <SafeAreaView style={styles.container}>
//       <ScrollView 
//         style={styles.scrollView} 
//         contentContainerStyle={styles.scrollContent}
//         showsVerticalScrollIndicator={false}
//       >
//         {/* Header with gradient background */}
//         <View style={styles.headerContainer}>
//           <View style={styles.headerGradient}>
//             <Text style={styles.title}>{data.title}</Text>
            
//             {/* Sentiment Badge */}
//             <View style={[
//               styles.sentimentBadge, 
//               { 
//                 backgroundColor: sentimentStyle.backgroundColor,
//                 borderColor: sentimentStyle.borderColor 
//               }
//             ]}>
//               <Text style={styles.sentimentEmoji}>{sentimentStyle.emoji}</Text>
//               <Text style={[styles.sentimentText, { color: sentimentStyle.textColor }]}>
//                 {data.sentiment?.charAt(0).toUpperCase() + data.sentiment?.slice(1)} Mood
//               </Text>
//             </View>
//           </View>
//         </View>
 
//         {/* Summary Card */}
//         <View style={styles.summaryCard}>
//           <View style={styles.sectionHeader}>
//             <Text style={styles.sectionIcon}>üìÑ</Text>
//             <Text style={styles.sectionTitle}>Summary</Text>
//           </View>
//           <Text style={styles.summaryText}>{data.summary}</Text>
//         </View>
 
//         {/* Tags Section */}
//         {data.tags && data.tags.length > 0 && (
//           <View style={styles.tagsCard}>
//             <View style={styles.sectionHeader}>
//               <Text style={styles.sectionIcon}>üè∑Ô∏è</Text>
//               <Text style={styles.sectionTitle}>Tags</Text>
//             </View>
//             <View style={styles.tagsContainer}>
//               {data.tags.map((tag, index) => (
//                 <View key={index} style={styles.tag}>
//                   <Text style={styles.tagText}>#{tag}</Text>
//                 </View>
//               ))}
//             </View>
//           </View>
//         )}
 
//         {/* Action Buttons */}
//         <View style={styles.actionsContainer}>
//           {/* Save Button */}
//           <TouchableOpacity
//             onPress={handleSave}
//             disabled={isSaving}
//             style={[styles.actionButton, styles.saveButton]}
//             activeOpacity={0.8}
//           >
//             {isSaving ? (
//               <>
//                 <ActivityIndicator color="white" size="small" />
//                 <Text style={styles.actionButtonText}>Saving...</Text>
//               </>
//             ) : (
//               <>
//                 <Text style={styles.actionButtonIcon}>üíæ</Text>
//                 <Text style={styles.actionButtonText}>Save Note</Text>
//               </>
//             )}
//           </TouchableOpacity>
 
//           <TouchableOpacity
//             onPress={handleShare}
//             style={[styles.actionButton, styles.shareButton]}
//             activeOpacity={0.8}
//           >
//             <Text style={styles.actionButtonIcon}>üì§</Text>
//             <Text style={styles.actionButtonText}>Share Summary</Text>
//           </TouchableOpacity>
 
//           <TouchableOpacity
//             onPress={handleNewNote}
//             style={[styles.actionButton, styles.newNoteButton]}
//             activeOpacity={0.8}
//           >
//             <Text style={styles.actionButtonIcon}>‚ú®</Text>
//             <Text style={styles.actionButtonText}>Create New Note</Text>
//           </TouchableOpacity>
//         </View>
 
//         {/* Footer */}
//         <View style={styles.footer}>
//           <Text style={styles.footerText}>‚ú® Powered by QuickNote AI</Text>
//           <Text style={styles.footerSubtext}>
//             Generated on {new Date().toLocaleDateString('en-US', {
//               weekday: 'long',
//               year: 'numeric',
//               month: 'long',
//               day: 'numeric'
//             })}
//           </Text>
//         </View>
//       </ScrollView>
//     </SafeAreaView>
//   );
// };
 
// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     backgroundColor: '#F8F9FA',
//   },
//   scrollView: {
//     flex: 1,
//   },
//   scrollContent: {
//     paddingBottom: 30,
//   },
//   headerContainer: {
//     marginBottom: 20,
//   },
//   headerGradient: {
//     backgroundColor: '#FFFFFF',
//     paddingHorizontal: 20,
//     paddingVertical: 30,
//     borderBottomLeftRadius: 25,
//     borderBottomRightRadius: 25,
//     shadowColor: '#000',
//     shadowOffset: { width: 0, height: 4 },
//     shadowOpacity: 0.1,
//     shadowRadius: 12,
//     elevation: 8,
//   },
//   title: {
//     fontSize: 28,
//     fontWeight: 'bold',
//     color: '#1A1A1A',
//     lineHeight: 36,
//     marginBottom: 16,
//     textAlign: 'center',
//   },
//   sentimentBadge: {
//     flexDirection: 'row',
//     alignItems: 'center',
//     justifyContent: 'center',
//     paddingHorizontal: 16,
//     paddingVertical: 10,
//     borderRadius: 25,
//     borderWidth: 2,
//     alignSelf: 'center',
//   },
//   sentimentEmoji: {
//     fontSize: 20,
//     marginRight: 8,
//   },
//   sentimentText: {
//     fontSize: 16,
//     fontWeight: '600',
//   },
//   summaryCard: {
//     backgroundColor: '#FFFFFF',
//     marginHorizontal: 20,
//     marginBottom: 20,
//     borderRadius: 20,
//     padding: 24,
//     shadowColor: '#000',
//     shadowOffset: { width: 0, height: 2 },
//     shadowOpacity: 0.08,
//     shadowRadius: 12,
//     elevation: 4,
//   },
//   tagsCard: {
//     backgroundColor: '#FFFFFF',
//     marginHorizontal: 20,
//     marginBottom: 20,
//     borderRadius: 20,
//     padding: 24,
//     shadowColor: '#000',
//     shadowOffset: { width: 0, height: 2 },
//     shadowOpacity: 0.08,
//     shadowRadius: 12,
//     elevation: 4,
//   },
//   sectionHeader: {
//     flexDirection: 'row',
//     alignItems: 'center',
//     marginBottom: 16,
//   },
//   sectionIcon: {
//     fontSize: 24,
//     marginRight: 12,
//   },
//   sectionTitle: {
//     fontSize: 20,
//     fontWeight: '700',
//     color: '#1A1A1A',
//   },
//   summaryText: {
//     fontSize: 16,
//     lineHeight: 26,
//     color: '#4A4A4A',
//     textAlign: 'left',
//   },
//   tagsContainer: {
//     flexDirection: 'row',
//     flexWrap: 'wrap',
//     gap: 10,
//   },
//   tag: {
//     backgroundColor: '#E3F2FD',
//     paddingHorizontal: 16,
//     paddingVertical: 8,
//     borderRadius: 20,
//     borderWidth: 1,
//     borderColor: '#2196F3',
//   },
//   tagText: {
//     color: '#1565C0',
//     fontSize: 14,
//     fontWeight: '600',
//   },
//   actionsContainer: {
//     paddingHorizontal: 20,
//     gap: 16,
//     marginBottom: 30,
//   },
//   actionButton: {
//     flexDirection: 'row',
//     alignItems: 'center',
//     justifyContent: 'center',
//     paddingVertical: 18,
//     borderRadius: 16,
//     shadowColor: '#000',
//     shadowOffset: { width: 0, height: 4 },
//     shadowOpacity: 0.15,
//     shadowRadius: 12,
//     elevation: 6,
//   },
//   saveButton: {
//     backgroundColor: '#FF9500',
//   },
//   shareButton: {
//     backgroundColor: '#4CAF50',
//   },
//   newNoteButton: {
//     backgroundColor: '#2196F3',
//   },
//   actionButtonIcon: {
//     fontSize: 20,
//     marginRight: 12,
//   },
//   actionButtonText: {
//     color: '#FFFFFF',
//     fontSize: 18,
//     fontWeight: '700',
//   },
//   footer: {
//     alignItems: 'center',
//     paddingHorizontal: 20,
//     paddingVertical: 20,
//     backgroundColor: '#F0F0F0',
//     marginHorizontal: 20,
//     borderRadius: 16,
//   },
//   footerText: {
//     fontSize: 16,
//     color: '#666666',
//     fontWeight: '600',
//     marginBottom: 4,
//   },
//   footerSubtext: {
//     fontSize: 12,
//     color: '#999999',
//     textAlign: 'center',
//   },
// });
 
// export default SummaryScreen;



import React from 'react';
import {
  View,
  Text,
  ScrollView,
  TouchableOpacity,
  Share,
  Alert,
  StyleSheet,
  Dimensions,
} from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
 
const { width } = Dimensions.get('window');
 
const SummaryScreen = ({ route, navigation }) => {
  const { summaryData } = route.params || {};
 
  // Fallback data for demo purposes
  const data = summaryData || {
    title: "Sample Meeting Summary",
    summary: "This is a sample summary that would be generated by the AI. It includes key points, action items, and important decisions made during the meeting or from the notes provided.",
    tags: ["meeting", "project", "deadline", "team"],
    sentiment: "neutral"
  };
 
  const getSentimentStyle = (sentiment) => {
    switch (sentiment?.toLowerCase()) {
      case 'positive':
        return {
          backgroundColor: '#E8F5E8',
          borderColor: '#4CAF50',
          textColor: '#2E7D32',
          emoji: 'üòä'
        };
      case 'negative':
        return {
          backgroundColor: '#FFEBEE',
          borderColor: '#F44336',
          textColor: '#C62828',
          emoji: 'üòî'
        };
      default:
        return {
          backgroundColor: '#E3F2FD',
          borderColor: '#2196F3',
          textColor: '#1565C0',
          emoji: 'üòê'
        };
    }
  };
 
  const sentimentStyle = getSentimentStyle(data.sentiment);
 
  const handleShare = async () => {
    try {
      const shareContent = `${data.title}\n\n${data.summary}\n\nTags: ${data.tags?.join(', ')}\nMood: ${data.sentiment}`;
      
      await Share.share({
        message: shareContent,
        title: data.title,
      });
    } catch (error) {
      Alert.alert('Error', 'Failed to share summary');
    }
  };
 
  const handleNewNote = () => {
    navigation.navigate('NoteInput');
  };
 
  const handleViewSavedNotes = () => {
    navigation.navigate('SavedNotes');
  };
 
  return (
    <SafeAreaView style={styles.container}>
      <ScrollView 
        style={styles.scrollView} 
        contentContainerStyle={styles.scrollContent}
        showsVerticalScrollIndicator={false}
      >
        {/* Header with gradient background */}
        <View style={styles.headerContainer}>
          <View style={styles.headerGradient}>
            <Text style={styles.title}>{data.title}</Text>
            
            {/* Auto-saved indicator */}
            <View style={styles.autoSavedBadge}>
              <Text style={styles.autoSavedIcon}>‚úÖ</Text>
              <Text style={styles.autoSavedText}>Automatically Saved</Text>
            </View>
            
            {/* Sentiment Badge */}
            <View style={[
              styles.sentimentBadge, 
              { 
                backgroundColor: sentimentStyle.backgroundColor,
                borderColor: sentimentStyle.borderColor 
              }
            ]}>
              <Text style={styles.sentimentEmoji}>{sentimentStyle.emoji}</Text>
              <Text style={[styles.sentimentText, { color: sentimentStyle.textColor }]}>
                {data.sentiment?.charAt(0).toUpperCase() + data.sentiment?.slice(1)} Mood
              </Text>
            </View>
          </View>
        </View>
 
        {/* Summary Card */}
        <View style={styles.summaryCard}>
          <View style={styles.sectionHeader}>
            <Text style={styles.sectionIcon}>üìÑ</Text>
            <Text style={styles.sectionTitle}>Summary</Text>
          </View>
          <Text style={styles.summaryText}>{data.summary}</Text>
        </View>
 
        {/* Tags Section */}
        {data.tags && data.tags.length > 0 && (
          <View style={styles.tagsCard}>
            <View style={styles.sectionHeader}>
              <Text style={styles.sectionIcon}>üè∑Ô∏è</Text>
              <Text style={styles.sectionTitle}>Tags</Text>
            </View>
            <View style={styles.tagsContainer}>
              {data.tags.map((tag, index) => (
                <View key={index} style={styles.tag}>
                  <Text style={styles.tagText}>#{tag}</Text>
                </View>
              ))}
            </View>
          </View>
        )}
 
        {/* Action Buttons */}
        <View style={styles.actionsContainer}>
          {/* View Saved Notes Button */}
          <TouchableOpacity
            onPress={handleViewSavedNotes}
            style={[styles.actionButton, styles.savedNotesButton]}
            activeOpacity={0.8}
          >
            <Text style={styles.actionButtonIcon}>üìö</Text>
            <Text style={styles.actionButtonText}>View All Saved Notes</Text>
          </TouchableOpacity>
 
          <TouchableOpacity
            onPress={handleShare}
            style={[styles.actionButton, styles.shareButton]}
            activeOpacity={0.8}
          >
            <Text style={styles.actionButtonIcon}>üì§</Text>
            <Text style={styles.actionButtonText}>Share Summary</Text>
          </TouchableOpacity>
 
          <TouchableOpacity
            onPress={handleNewNote}
            style={[styles.actionButton, styles.newNoteButton]}
            activeOpacity={0.8}
          >
            <Text style={styles.actionButtonIcon}>‚ú®</Text>
            <Text style={styles.actionButtonText}>Create New Note</Text>
          </TouchableOpacity>
        </View>
 
        {/* Footer */}
        <View style={styles.footer}>
          <Text style={styles.footerText}>‚ú® Powered by QuickNote AI</Text>
          <Text style={styles.footerSubtext}>
            Generated and saved on {new Date().toLocaleDateString('en-US', {
              weekday: 'long',
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </Text>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};
 
const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F8F9FA',
  },
  scrollView: {
    flex: 1,
  },
  scrollContent: {
    paddingBottom: 30,
  },
  headerContainer: {
    marginBottom: 20,
  },
  headerGradient: {
    backgroundColor: '#FFFFFF',
    paddingHorizontal: 20,
    paddingVertical: 30,
    borderBottomLeftRadius: 25,
    borderBottomRightRadius: 25,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.1,
    shadowRadius: 12,
    elevation: 8,
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#1A1A1A',
    lineHeight: 36,
    marginBottom: 16,
    textAlign: 'center',
  },
  autoSavedBadge: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#E8F5E8',
    paddingHorizontal: 16,
    paddingVertical: 8,
    borderRadius: 20,
    alignSelf: 'center',
    marginBottom: 16,
    borderWidth: 1,
    borderColor: '#4CAF50',
  },
  autoSavedIcon: {
    fontSize: 16,
    marginRight: 6,
  },
  autoSavedText: {
    color: '#2E7D32',
    fontSize: 14,
    fontWeight: '600',
  },
  sentimentBadge: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    paddingHorizontal: 16,
    paddingVertical: 10,
    borderRadius: 25,
    borderWidth: 2,
    alignSelf: 'center',
  },
  sentimentEmoji: {
    fontSize: 20,
    marginRight: 8,
  },
  sentimentText: {
    fontSize: 16,
    fontWeight: '600',
  },
  summaryCard: {
    backgroundColor: '#FFFFFF',
    marginHorizontal: 20,
    marginBottom: 20,
    borderRadius: 20,
    padding: 24,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.08,
    shadowRadius: 12,
    elevation: 4,
  },
  tagsCard: {
    backgroundColor: '#FFFFFF',
    marginHorizontal: 20,
    marginBottom: 20,
    borderRadius: 20,
    padding: 24,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.08,
    shadowRadius: 12,
    elevation: 4,
  },
  sectionHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 16,
  },
  sectionIcon: {
    fontSize: 24,
    marginRight: 12,
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: '700',
    color: '#1A1A1A',
  },
  summaryText: {
    fontSize: 16,
    lineHeight: 26,
    color: '#4A4A4A',
    textAlign: 'left',
  },
  tagsContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: 10,
  },
  tag: {
    backgroundColor: '#E3F2FD',
    paddingHorizontal: 16,
    paddingVertical: 8,
    borderRadius: 20,
    borderWidth: 1,
    borderColor: '#2196F3',
  },
  tagText: {
    color: '#1565C0',
    fontSize: 14,
    fontWeight: '600',
  },
  actionsContainer: {
    paddingHorizontal: 20,
    gap: 16,
    marginBottom: 30,
  },
  actionButton: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    paddingVertical: 18,
    borderRadius: 16,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.15,
    shadowRadius: 12,
    elevation: 6,
  },
  savedNotesButton: {
    backgroundColor: '#9C27B0',
  },
  shareButton: {
    backgroundColor: '#4CAF50',
  },
  newNoteButton: {
    backgroundColor: '#2196F3',
  },
  actionButtonIcon: {
    fontSize: 20,
    marginRight: 12,
  },
  actionButtonText: {
    color: '#FFFFFF',
    fontSize: 18,
    fontWeight: '700',
  },
  footer: {
    alignItems: 'center',
    paddingHorizontal: 20,
    paddingVertical: 20,
    backgroundColor: '#F0F0F0',
    marginHorizontal: 20,
    borderRadius: 16,
  },
  footerText: {
    fontSize: 16,
    color: '#666666',
    fontWeight: '600',
    marginBottom: 4,
  },
  footerSubtext: {
    fontSize: 12,
    color: '#999999',
    textAlign: 'center',
  },
});
 
export default SummaryScreen;